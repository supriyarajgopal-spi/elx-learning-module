<?php

function elx_json_feed_shadow_request_alter(&$entity) {

  // dpm ($entity);
  $entity_array = (array) $entity;
  dpm ($entity_array);

  $size_of_entity_array = count($entity_array);
  // dpm('number of array elements : ' . $size_of_entity_array    );
  // load the current entity in a wrapper
  $wrapper = entity_metadata_wrapper('node', $entity);
  // dpm($wrapper->field_test_image->fid);
  // given our node entity type, get all the fields for it
  $entity_type = $entity->type;

  $node_fields = field_info_instances('node', $entity_type);
  dpm($node_fields);
  $number_of_fields = count($node_fields);
  // dpm($number_of_fields . ' ' . $entity_type . ' fields we found:');

  $children_nodes_to_process = element_children($node_fields);

  // Grab language
  $language = $entity->path['language'];


  for ($i=0; $i < $number_of_fields; $i++) {
    // dpm('['. $i .']' . 'children node '. $children_nodes_to_process[$i]);
    // dpm($children_nodes_to_process[$i]);
    // dpm($wrapper->$children_nodes_to_process[$i]->value());
    $info = field_info_field($children_nodes_to_process[$i]);

    // BEGIN Image and Taxonomy snippet //
    $field_name = $info['field_name'];
    if ($info['type'] == 'image') {
      $image_style = $node_fields[$field_name]['display']['default']['settings']['image_style'];

      $fid = $entity_array[$field_name][$language][0]['fid'];
      $file_id = file_load($fid);
      $uri = $file_id->uri;

      $image_style_path = image_style_url($image_style, $uri);
      dpm($field_name . ': ' . $image_style_path);
    }

    if ($info['type'] == 'taxonomy_term_reference') {
      $number_of_terms = count($entity_array[$field_name][$language]);
      dpm($field_name);
      for ($t=0; $t < $number_of_terms; $t++) {
        $tids = array($entity_array[$field_name][$language][$t]['tid']);
        $terms = taxonomy_term_load_multiple($tids);
        foreach ($terms as $term) {
          $name = $term->name;
          dpm($name);
        }
      }
    }
    // END Image and Taxonomy snippet //

    // if ($info['type'] == 'paragraphs') {
    //   // dpm('found a paragraph named ' . $info['field_name']);
    //   $paragraphs_name = $info['field_name'];
    //   $paragraphs = $wrapper->$paragraphs_name->value();
    //   $number_of_paragraphs = count($paragraphs);
    //   // dpm($number_of_paragraphs . ' question paragraphs found.');
    //   // dpm('paragraph');
    //   // dpm($paragraphs);
    //   $new_entity = (array) $entity;
    //   // dpm($new_entity);
    //   for ($p=0; $p < $number_of_paragraphs; $p++) {
    //     $type = $paragraphs[$p]->bundle;
    //     $fields = field_info_instances('paragraphs_item', $type);
    //     dpm('fields');
    //     dpm($fields);
    //     // the data is contained in the item which needs to be loaded
    //     $load_item = $paragraphs[$p]->item_id;
    //     $items = paragraphs_item_load($load_item);
    //     dpm('items');
    //     dpm($items);
    //     $more_children = element_children($fields);
    //     $fields_count = count($fields);
    //     dpm('['. $p .']' . 'fields count ' . $fields_count);
    //     array_shift($new_entity[$paragraphs_name][$language]);
    //     $new_entity[$paragraphs_name][$language][] = $fields;
    //     dpm('more_children');
    //     dpm($more_children);
    //     for ($f=0; $f < $fields_count; $f++) {
    //       $fields_info = field_info_field($more_children[$f]);
    //       dpm('fields_info');
    //       dpm($fields_info);
    //       if ($fields_info['type'] == 'paragraphs') {
    //         dpm('['. $f .']' . 'found a paragraph named ' . $fields_info['field_name']);
    //         $child_paragraph_name = $fields_info['field_name'];
    //         dpm($child_paragraph_name);
    //         dpm($new_entity);
    //         array_shift($new_entity['field_paragraph_multiple_choice'][$language]);
    //         $new_entity['field_paragraph_multiple_choice'][$language][] = $fields_info;
    //       } else {
    //         // dpm('not a child paragraph');
    //       }
    //     }
    //   }
    //   dpm($new_entity);

    // } else {
    //   // dpm('not a paragraph');
    // }
  }
}

