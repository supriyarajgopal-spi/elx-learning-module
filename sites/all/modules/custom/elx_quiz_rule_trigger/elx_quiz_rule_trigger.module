<?php

/**
 * Implements hook_help().
 */
function elx_quiz_rule_trigger_help($path, $arg) {
  switch ($path) {
    case "admin/help#elx_quiz_rule_trigger":
      return '' . t("Triggers a rule to award points to user on passing H5P Quiz") . '';
      break;
  }
}

/**
 * Implements hook_node_view().
 * Add JS only when H5P quiz is taken up (viewed in full mode)
 */
function elx_quiz_rule_trigger_node_view($node, $view_mode, $langcode) {
	if($node->type == 'h5p_content' && $view_mode == 'full')
		drupal_add_js(drupal_get_path('module', 'elx_quiz_rule_trigger') . '/js/h5p-quiz.js',array('weight'=>6));
}

/**
 * Implements hook_menu().
 * Called from JS when H5P quiz is passed by logged in user
 */
function elx_quiz_rule_trigger_menu() {
    $items['rule/award-points-quiz-pass/%'] = array(
      'page callback' => '_invoke_rule_award_points_quiz_pass',
	  'page arguments' => array(2), //Pass content id as a parameter
	  'access callback' => TRUE,
	  'type' => MENU_CALLBACK,
    );
    return $items;
}

/**
 * User defined callback function to invoke the rule which awards points to user on passing quiz for the 1st time itself
 * Parameters: $id - the content id of H5P quiz taken
 */
function _invoke_rule_award_points_quiz_pass($id)
{
	global $user;
	global $base_url;
	
	//Get the nid using the content id of H5P quiz
	$nid = db_select('h5p_nodes','p')->fields('p',array('nid'))->condition('p.content_id',$id,'=')->execute()->fetchField();
	$node = node_load($nid);
	
	rules_invoke_event('user_passed_h5p_quiz', $user,$node); //Trigger this rule
	drupal_goto($base_url.'/node/'.$nid); //'Page redirect' action in above rule not working, hence redirect from here
}
  
/**
 * Implements hook_rules_event_info().
 * Borrowed from http://drupal.stackexchange.com/questions/121461/how-to-programmatically-add-modify-a-rule
 * Allow this event to appear under Event tab in Rules UI & mention allowed parameters
 */
function elx_quiz_rule_trigger_rules_event_info() {
  return array(
    'user_passed_h5p_quiz' => array(
      'label' => t('User passed H5P Quiz(Question Set)'),
	  'group' => t('ELX'),
      'module' => 'elx_quiz_rule_trigger',
      'variables' => array(
        'user' => array('type' => 'user', 'label' => t('User who passed H5P quiz')),
		'quiz' => array('type' => 'node', 'label' => t('H5P quiz taken by user'),'bundle' => 'h5p_content', 'skip save' => TRUE),
      ),
    ),
  );
}

/**
 * Implements hook_rules_condition_info().
 * Allow this condition to appear under Conditions tab in Rules UI & mention parameters that will be passed to callback function to validate this condition
 * Borrowed from http://drupal.stackexchange.com/questions/121461/how-to-programmatically-add-modify-a-rule
 */
function elx_quiz_rule_trigger_rules_condition_info() {
  return array(
    'user_has_taken_quiz_before' => array(
      'group' => t('ELX'),
      'label' => t('User has taken H5P quiz before'),
      'parameter' => array(
        'user' => array(
          'type' => 'user',
          'label' => t('User'),
        ),
		'quiz' => array(
          'type' => 'node',
          'label' => t('H5P Quiz'),
        )
      ),
	  'module' => 'elx_quiz_rule_trigger',
    ),
  );
}

/**
 * User defined function callback to return boolean depending on whether user has taken this quiz before or not
 * Borrowed from http://drupal.stackexchange.com/questions/121461/how-to-programmatically-add-modify-a-rule
 * Parameters: $user - the user object who has passed quiz; $quiz: Interactive Content node object
 * Returns boolean - true if user has taken this quiz before or false, if this is the first time the user passed this quiz
 */
function user_has_taken_quiz_before($user,$quiz) {
	$query_hasUserTakenQuizBefore = db_select('h5p_points','p');
	$query_hasUserTakenQuizBefore->join('h5p_nodes','n','n.content_id = p.content_id');
	$query_hasUserTakenQuizBefore->fields('p',array('content_id'));
	$query_hasUserTakenQuizBefore->condition('n.nid',$quiz->nid,'=')->condition('p.uid',$user->uid,'=')->condition('p.finished',0,'>'); /*If 'finished' > 0, then user has clicked on 'Finish'*/
	$result = $query_hasUserTakenQuizBefore->execute();
	
	$noOfTimesQuizTaken = $result->rowCount();
	
	return ($noOfTimesQuizTaken > 0);
}