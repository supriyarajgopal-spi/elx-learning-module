<?php

//require_once 'includes/password.inc';
//require_once 'sites/all/modules/contrib/aes/aes.module';
//require_once 'includes/database/prefetch.inc';


function elx_utility_node_validate($node, $form, &$form_state) {
  // dpm($node);
  // if ($node->type=='history' || $node->type=='teaser') {
  //   if (strlen($node->field_link['und'][0]['url']) && $node->field_video_upload['und'][0]['fid']) {
  //     form_set_error('field', t('You may either use a link or a video, not both.'));
  //   }
  //   elseif (!(strlen($node->field_link['und'][0]['url']) || $node->field_video_upload['und'][0]['fid'])) {
  //     form_set_error('field', t('You must choose either a link or a video (but not both).'));
  //   }
  // }
}


/**
 * Implements hook_preprocess_html.
 */
function elx_utility_preprocess_html(&$variables) {
// Add conditional stylesheets for admin pages on admin theme.
  global $user;
  if ($user->uid) {
    // reference your current admin theme
    $theme_path = drupal_get_path('theme', 'seven');
    // reference your own stylesheet
    drupal_add_css(drupal_get_path('module', 'elx_utility')
    . '/admin.css', array('weight' => CSS_THEME));
    drupal_add_js(drupal_get_path('module', 'elx_utility')
    . '/admin.js');
    drupal_add_js(drupal_get_path('module', 'elx_utility')
    . '/jquery.alphanum.js');
    
  }
}

/**
 * Random pass generator.
 */
function randomPassword() {
  $alphabet = "abcdefghijkmnopqrstuwxyzABCDEFGHJKMNPQRSTUWXYZ23456789";
  $pass = array(); //remember to declare $pass as an array
  $alphaLength = strlen($alphabet) - 1; //put the length -1 in cache
  for ($i = 0; $i < 8; $i++) {
    $n = rand(0, $alphaLength);
    $pass[] = $alphabet[$n];
  }
  return implode($pass); //turn the array into a string
}

/**
 * Implements hook_feeds_after_save().
 * Auto-generate user password on user feed import
 */
function elx_utility_feeds_after_save(FeedsSource $source, $entity, $item, $entity_id) {
  if (isset($entity->pass) && $entity->pass == '') {
    require_once DRUPAL_ROOT . '/' . variable_get('password_inc', 'includes/password.inc');
    $password = randomPassword();
    $encrypted_data = aes_encrypt($password);
    watchdog('elx_utility_feeds_after_save', 'New user ' . $entity->uid . ' new password.');
    $entity->pass = $password;
    db_insert('aes_passwords')
      ->fields(array(
        'uid' => $entity->uid,
        'pass' => $encrypted_data,
      ))
      ->execute();
    $pass = user_hash_password($password);
    db_update('users')
      ->fields(array('pass' => $pass))
      ->where("uid = :uid", array(
        ':uid' => $entity->uid,
      ))
      ->execute();
    $account = user_load($entity->uid);
    drupal_mail('user', 'register_admin_created', $account->mail, $entity->language, array('account' => $account), variable_get('site_mail', 'noreply-myelx@estee.com'));
  }
}

/**
 * Implements hook_clone_node_alter().
 */
function elx_utility_clone_node_alter(&$node, $context) {
  $lang = $node->language;
  // Empty manifest reference
  if (isset($node->field_manifest[$lang][0]['target_id'])) {
    $node->field_manifest[$lang][0]['target_id'] = '';
  }
}

/**
 * Implements hook_feeds_after_parse().
 */
function elx_utility_feeds_after_parse(FeedsSource $source, FeedsParserResult $result) {
  // add space to all field_keys for data_xls import
  // some field_keys have spaces after parsing and can't alter mapping directly
  if ($source->importer->id == 'data_xls') {
    foreach ($result->items as $item_key => $item) {
      foreach($item as $field_key => $field_val) {
        $result->items[$item_key][$field_key . ' '] = $field_val;
      }
    }
  }
}

/**
 * Implements hook_entity_info_alter().
 * Created by SUPRIYA RAJGOPAL on 21Jul16 to create a view mode for nodes so that they can be displayed in a modal using Ctools modal
 * Borrowed from http://www.wunderkraut.com/blog/drupal-7-custom-node-view-modes/2010-12-20
 */
function elx_utility_entity_info_alter(&$entity_info)
{
  $entity_info['node']['view modes']['modal'] = array(
    'label' => t('Modal'),
    'custom settings' => TRUE,
  );
}

/**
 * Implements hook_menu().
 * Created by SUPRIYA RAJGOPAL on 21Jul16 to define a path which renders product details in a modal
 * !Note: The click to this path should be AJAX enabled by adding 'use-ajax' class
 * Borrowed from https://www.drupion.com/blog/10-steps-creating-ctools-modal-window-drupal-7
 */
function elx_utility_menu()
{
  $items['modal/%ctools_js/%'] = array(
      'title' => 'ELX Custom Modal',
      'page arguments' => array(1,2), //Pass whether to use AJAX or JS and the nid
      'page callback' => '_elx_custom_modal', //User defined function called when the link is clicked
      'access callback' => TRUE,
      'type' => MENU_NORMAL_ITEM, //Internal path menu, not a menu tab
  );
 
  $items['modal/%ctools_js/flags/%'] = array(
      'title' => 'Product Details Modal',
      'page arguments' => array(1,3), //Pass whether to use AJAX or JS and the machine name of the flag
      'page callback' => '_elx_badges_modal', //User defined function called when the link is clicked
      'access callback' => TRUE,
      'type' => MENU_NORMAL_ITEM, //Internal path menu, not a menu tab
  );
  return $items;
}

function _elx_custom_modal($js = NULL, $nid = NULL)
{
  if($nid == NULL)
   return 'No content to display.';
 
  //Include ctools if path contains 'nojs' to work, else render page normally
  if($js)
  {
    ctools_include('modal');
    ctools_include('ajax');
	  ctools_modal_add_js(); //Default CTools JS. This is a must if custom javascript is not available.
    drupal_add_js(array(
        'elx-tools' => array(
          'modalSize' => array(
            'type' => 'scale',
            'width' => .6,
            'height' => .8,
            'contentRight' => 5,
            'contentBottom' => 20,
          ),
          'animation' => 'slideDown',
          'closeText' => t(''),
          'closeImage' => t(''),
          //'closeImage' => base_path() . path_to_theme() . '',
        ),
      ), 'setting');
      
    drupal_add_js(array(
        'product-library' => array(
          'modalSize' => array(
            'type' => 'scale',
            'width' => 1,
            'height' => 1,
            'contentRight' => 5,
            'contentBottom' => 20,
          ),
          'animation' => 'slideDown',
          'closeText' => t(''),
          'closeImage' => t(''),
          //'closeImage' => base_path() . path_to_theme() . '',
        ),
      ), 'setting');
      
    drupal_add_js(array(
        'search-product-library' => array(
          'modalSize' => array(
            'type' => 'scale',
            'width' => 1,
            'height' => 1,
            'contentRight' => 5,
            'contentBottom' => 20,
          ),
          'animation' => 'slideDown',
          'closeText' => t(''),
          'closeImage' => t(''),
          //'closeImage' => base_path() . path_to_theme() . '',
        ),
      ), 'setting');

      drupal_add_js(array(
          'levels' => array(
            'modalSize' => array(
              'type' => 'scale',
              'width' => 1,
              'height' => 1,
              'addHeight' => 80, // this needs to match the css height for div.modal-header or it acts buggy
              'contentRight' => 5,
              'contentBottom' => 0,
            ),
            'modalClass' => 'default',
            'animation' => 'slideDown',
            'closeText' => t(''),
            'closeImage' => t(''),
            //'closeImage' => base_path() . path_to_theme() . '',
          ),
        ), 'setting');
    
  }
  
  //Load the node object
  $node = node_load($nid);
  
  //Render content in 'Modal' view mode
  $nodeContent = node_view($node, 'modal', NULL); //To prevent strict warning that only variables can be passed by reference
  $contents = render($nodeContent);
  $integration = h5p_add_files_and_settings(NULL, NULL);
  if ($integration) {
    drupal_add_js(array('H5PIntegration' => $integration), 'setting');
  }
  return ctools_modal_render($node->title, $contents) ;
}

/**
 * User defined page callback created by SUPRIYA RAJGOPAL on 2Aug16 to show badge title in a modal
 * Borrowed from https://www.drupion.com/blog/10-steps-creating-ctools-modal-window-drupal-7
 *
 * @param $js
 *   boolean CTools determination whether the user's browser is javascript enabled. 
 * @param $flag_name
 *   string The machine name of flag passed as an argument from the hook_menu() path
 * @return
 *   string The flag title in a modal window
 */
function _elx_badges_modal($js = NULL, $flag_name = NULL)
{
  global $user;
  if($flag_name == NULL)
   return 'No content to display.';
   
  //Include ctools iff path contains 'nojs' to work, else render page normally
  if($js)
  {
    ctools_include('modal');
    ctools_include('ajax');
	ctools_modal_add_js(); //Default CTools JS. This is a must if custom javascript is not available.
  }
  
  $flag = flag_load($flag_name); //Load the flag object
  $is_flagged = $flag->is_flagged($user->uid);//is the current user flagged?
  
  //Form the modal content
  $rendered_title = (isset($flag->title) && $flag->title != '')?$flag->title:'';
  $rendered_description = (isset($flag->badge_description) && $flag->badge_description != '')?$flag->badge_description:'';
  $rendered_undescription = (isset($flag->badge_unearned_description) && $flag->badge_unearned_description != '')?$flag->badge_unearned_description:'';
  //$image = (isset($flag->badge_image) && $flag->badge_image != 0)?file_load($flag->badge_image):FALSE;
  //$rendered_img = ($image)?'Image: '.render(theme_image_style(array('style_name' => 'thumbnail','path' => $image->uri))):'';

  if ($is_flagged) {
    $output = $rendered_description;
  } else {
    $output = $rendered_undescription;
  }

  return ctools_modal_render($rendered_title.":".$output,$output); //Render content in 'Modal' view mode
  //return ctools_modal_render($flag->title,$output); //Render content in 'Modal' view mode
}