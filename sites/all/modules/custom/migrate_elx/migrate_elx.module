<?php
/*
 * Impmentation of hook_migrate_api()
 */

function migrate_elx_migrate_api() {
  $api = array(
    'api' => 2,
    'groups' => array(
      'elx' => array(
        'title' => t('ELX Migrations'),
      ),
    ),
    'migrations' => array(
      'ProductDetail' => array(
        'class_name' => 'ProductdetailMigration',
        'group_name' => 'elx',
      ),
      'List' => array(
        'class_name' => 'ListMigration',
        'group_name' => 'elx',
      ),
    	'ListitemParagraph' => array(
    		'class_name' => 'ListitemParagraphMigration',
    		'group_name' => 'elx',
    	),
    	'Hotspot' => array(
    		'class_name' => 'HotspotMigration',
    		'group_name' => 'elx',
    	),
    	'HotspotitemParagraph' => array(
    		'class_name' => 'HotspotitemParagraphMigration',
    		'group_name' => 'elx',
    	),
    	'Contentobject' => array(
    				'class_name' => 'ContentobjectMigration',
    				'group_name' => 'elx',
    	),
    ),
  );
  return $api;
}

function migrate_elx_form_alter(&$form, &$form_state, $form_id){
	if($form_id == 'feeds_import_form' && (arg(1) == 'product_details' || arg(1) == 'learning_points') ){
		//dpm($form);
		$form['feeds']['elx_assets'] = array(
			'#type' => 'plupload',
			'#title' => t('Upload Assets'),
			'#weight'=> -1,
      '#plupload_settings' => array(
        'max_file_size' => '268435456b',
      ),
		);
        //unset($form['#submit']);
		$form['#submit'][] = 'migrate_elx_files_submit';
	}
}

function migrate_elx_feeds_presave(FeedsSource $source, $entity, $item) {
  //if ($source->id =='learning_points') {
    // Skip saving this entity.
    //$entity->feeds_item->skip = TRUE;
  //}
  //dpm('File has been uploaded and will be processed');
}

function migrate_elx_files_submit($form, &$form_state) {
	dpm($form_state);
	$saved_files = array(); //Array to capture file objects
	$scheme = variable_get('file_default_scheme', 'public') . '://';
	$directoryname = 'elx_bulk/assets'; // Directory where images are collected
	$imagebankpath = $scheme . $directoryname;
	file_prepare_directory($imagebankpath, FILE_CREATE_DIRECTORY); // Create the folder if it doesn't exist
	// We can't use file_save_upload() because of
	// http://www.jacobsingh.name/content/tight-coupling-no-not
	// file_uri_to_object();
	foreach ($form_state['values']['feeds']['elx_assets'] as $uploaded_file) {
		if ($uploaded_file['status'] == 'done') {
			$source = $uploaded_file['tmppath'];
			$destination = file_stream_wrapper_uri_normalize($imagebankpath .'/'. $uploaded_file['name']);
			// Rename it to its original name, and put it in its final home.
			// Note - not using file_move here because if we call file_get_mime
			// (in file_uri_to_object) while it has a .tmp extension, it horks.
			$destination = file_unmanaged_move($source, $destination, FILE_EXISTS_REPLACE);
			$file = plupload_file_uri_to_object($destination);
      $existing_files = file_load_multiple(array(), array('uri' => $destination));
      if (!empty($existing_files)) {
        $existing = reset($existing_files);
        $file->fid = $existing->fid;
      }
			file_save($file);
			$saved_files[] = $file;
		}
		else {
			form_set_error('elx_assets', "Upload of {$uploaded_file['name']} failed");
		}
	}



  migrate_static_registration(array('Contentobject'));
  $migration = Migration::getInstance('Contentobject');
  $result = $migration->processImport(array('force'=>TRUE));
  dpm($result);
}

function migrate_elx_menu(){

  $items['admin/content/bulk-upload'] = array(
    'title' => 'Wysiwyg Tool',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('migrate_elx_upload_form'),
    'description' => 'Configure client-side editors.',
    'access callback' => TRUE,
    'expanded' => TRUE,
  );
  return $items;
}

function migrate_elx_upload_form($form, &$form_state){

  $form['upload'] = array(
    '#type' => 'fieldset',
    '#title' => t('Bulk Upload Content'),
    '#collapsible' => FALSE,
  );
  /*$form['upload']['type'] = array(
    '#type' => 'select',
    '#options' => array(
      'learning_content' => t('Learning Content'),
      'product' => t('Product Details'),
      'story' => t('Stories'),
    ),
    '#description' => t('Please choose what kind of content will be uploaded'),
  );*/
  $form['upload']['assets'] = array(
  '#type' => 'plupload',
  '#title' => t('Upload Assets'),
);
  $form['upload']['file'] = array(
    '#type' => 'file',
    '#title' => t('csv File'),
    //"#upload_validators"  => array("file_validate_extensions" => array("zip")),

  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'upload',

  );

  return $form;
}
